<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgemployee.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QCqRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB2AAAALAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAxAC4AMAAgACgA
        dQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAcQB1AGEAbABpAHQAeQAgAD0A
        IAAxADAAMAAKAAAA/9sAQwABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEB/9sAQwEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB/8AAEQgA4QDIAwEiAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8A/vwooooAKKKKACiiigAooooAjX/Wv/vRf0q5VVMmSX5d3+q9P89B/wDX61ao
        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
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>